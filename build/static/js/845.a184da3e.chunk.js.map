{"version":3,"file":"static/js/845.a184da3e.chunk.js","mappings":";kKAQA,MAAMA,EAASC,GACPA,GACmB,KAAfA,EAAOC,IAC6B,QAA7BD,EAAOC,IAAIC,cAGkE,SAAvE,OAAbC,eAAkC,IAAbA,cAAsB,EAASA,SAASF,IAAIC,6BCP7E,MAAME,EAAyBA,CAACC,EAAIC,EAAiBC,EAAgBC,EAAeC,KAChF,MAAMC,EAAML,EAAGM,cAAcC,YAC7B,IAAIC,EAAMd,EAAMM,GAMhB,MAQMS,EAAaC,GACRF,GAAOE,EAAOC,OAASD,EAAOC,OAqCzC,OAAOC,EAAAA,EAAAA,GAAc,CACjBZ,KACAa,YAAa,eAKbC,gBAAiB,IACjBC,UAAW,GACXC,SAzCcN,IAMdF,EAAMd,EAAMM,GApBEU,KACd,MACM,OAAEO,GAAWP,EACnB,OAAIF,EACOS,GAAUZ,EAAIa,WAHP,GAKXD,GALW,EAKQ,EAenBE,CAAST,IAAWT,KAmC3BmB,QAASlB,EACTmB,OAlCYX,IAEZ,MACMY,EADQb,EAAUC,GACEL,EAAIa,WAC9Bf,EAAcmB,EAAU,EA+BxBC,MA7BWb,IAEX,MAAMc,EAAQf,EAAUC,GAClBe,EAAQpB,EAAIa,WACZI,EAAYE,EAAQC,EACpBC,EAvBYhB,IACXF,GAAOE,EAAOiB,UAAYjB,EAAOiB,UAsBvBC,CAAalB,GAExBmB,EAAiBH,GAAY,IAAMA,EAAW,IAAOF,EADjDC,EAAQ,GAGZK,GADUD,EAAiB,EAAIP,EAAYA,GACfG,EAClC,IAAIM,EAAU,EACd,GAAID,EAAkB,EAAG,CACrB,MAAME,EAAMF,EAAkBG,KAAKC,IAAIR,GACvCK,EAAUE,KAAKE,IAAIH,EAAK,IAC5B,CACA5B,EAAayB,EAAgBP,GAAa,EAAI,KAAOc,EAAAA,EAAAA,GAAM,EAAGd,EAAW,OAASS,EAAQ,GAe5F","sources":["../node_modules/@ionic/core/components/dir.js","../node_modules/@ionic/core/components/swipe-back.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Returns `true` if the document or host element\n * has a `dir` set to `rtl`. The host value will always\n * take priority over the root document value.\n */\nconst isRTL = (hostEl) => {\n    if (hostEl) {\n        if (hostEl.dir !== '') {\n            return hostEl.dir.toLowerCase() === 'rtl';\n        }\n    }\n    return (document === null || document === void 0 ? void 0 : document.dir.toLowerCase()) === 'rtl';\n};\n\nexport { isRTL as i };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { k as clamp } from './helpers.js';\nimport { i as isRTL } from './dir.js';\nimport { createGesture } from './index3.js';\n\nconst createSwipeBackGesture = (el, canStartHandler, onStartHandler, onMoveHandler, onEndHandler) => {\n    const win = el.ownerDocument.defaultView;\n    let rtl = isRTL(el);\n    /**\n     * Determine if a gesture is near the edge\n     * of the screen. If true, then the swipe\n     * to go back gesture should proceed.\n     */\n    const isAtEdge = (detail) => {\n        const threshold = 50;\n        const { startX } = detail;\n        if (rtl) {\n            return startX >= win.innerWidth - threshold;\n        }\n        return startX <= threshold;\n    };\n    const getDeltaX = (detail) => {\n        return rtl ? -detail.deltaX : detail.deltaX;\n    };\n    const getVelocityX = (detail) => {\n        return rtl ? -detail.velocityX : detail.velocityX;\n    };\n    const canStart = (detail) => {\n        /**\n         * The user's locale can change mid-session,\n         * so we need to check text direction at\n         * the beginning of every gesture.\n         */\n        rtl = isRTL(el);\n        return isAtEdge(detail) && canStartHandler();\n    };\n    const onMove = (detail) => {\n        // set the transition animation's progress\n        const delta = getDeltaX(detail);\n        const stepValue = delta / win.innerWidth;\n        onMoveHandler(stepValue);\n    };\n    const onEnd = (detail) => {\n        // the swipe back gesture has ended\n        const delta = getDeltaX(detail);\n        const width = win.innerWidth;\n        const stepValue = delta / width;\n        const velocity = getVelocityX(detail);\n        const z = width / 2.0;\n        const shouldComplete = velocity >= 0 && (velocity > 0.2 || delta > z);\n        const missing = shouldComplete ? 1 - stepValue : stepValue;\n        const missingDistance = missing * width;\n        let realDur = 0;\n        if (missingDistance > 5) {\n            const dur = missingDistance / Math.abs(velocity);\n            realDur = Math.min(dur, 540);\n        }\n        onEndHandler(shouldComplete, stepValue <= 0 ? 0.01 : clamp(0, stepValue, 0.9999), realDur);\n    };\n    return createGesture({\n        el,\n        gestureName: 'goback-swipe',\n        /**\n         * Swipe to go back should have priority over other horizontal swipe\n         * gestures. These gestures have a priority of 100 which is why 101 was chosen here.\n         */\n        gesturePriority: 101,\n        threshold: 10,\n        canStart,\n        onStart: onStartHandler,\n        onMove,\n        onEnd,\n    });\n};\n\nexport { createSwipeBackGesture };\n"],"names":["isRTL","hostEl","dir","toLowerCase","document","createSwipeBackGesture","el","canStartHandler","onStartHandler","onMoveHandler","onEndHandler","win","ownerDocument","defaultView","rtl","getDeltaX","detail","deltaX","createGesture","gestureName","gesturePriority","threshold","canStart","startX","innerWidth","isAtEdge","onStart","onMove","stepValue","onEnd","delta","width","velocity","velocityX","getVelocityX","shouldComplete","missingDistance","realDur","dur","Math","abs","min","clamp"],"sourceRoot":""}